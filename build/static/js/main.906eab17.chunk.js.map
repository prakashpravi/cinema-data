{"version":3,"sources":["screen/login/index.js","router/router.js","hooks/query.js","components/header/index.js","components/slider/index.js","components/comman/dialogbox/index.js","components/lineList/index.js","components/home/index.js","components/admin/index.js","components/form/index.js","components/mymoive/index.js","screen/password/index.js","components/notification/index.js","screen/home/index.js","screen/forget/index.js","screen/signIn/stepper.js","screen/signIn/index.js","router/index.js","hooks/index.js","App.gqlclient.js","components/context/index.js","hooks/networkcall.js","App.auth.js","root/index.js","index.js"],"names":["Title","Typography","Login","props","setInputValue","name","val","setState","handleSubmit","a","message","loading","fetch","method","headers","Accept","body","JSON","stringify","username","state","password","then","data","json","response","info","notification","success","description","localStorage","setItem","token","id","history","push","error","catch","this","className","style","height","md","span","lg","onFinish","size","src","level","Item","rules","required","autoFocus","autoComplete","onChange","e","target","value","prefix","UserOutlined","placeholder","Password","LockOutlined","type","margin","onClick","htmlType","ArrowRightOutlined","cursor","textDecoration","width","alt","React","routes","admin","forget","HomeCom","signIn","form","mymovie","passwordchange","allMoviesTitles","gql","userProfileById","createMovieTitle","price","movieImage","user_id","date","updateUserProfileById","firstName","lastName","email","mobile_no","birthday","Header","componentDidMount","client","query","getItem","mobileNo","moment","format","profileImg","err","console","log","listdata","allMovieTitles","nodes","logout","clear","handleopen","open","handlechange","n","v","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","file","originFileObj","imageUrl","fileList","uid","status","url","mutate","variables","mutation","res","location","window","pathname","title","placement","onClose","visible","textAlign","action","multiple","listType","onRemove","ghost","separator","position","marginTop","count","length","backgroundColor","color","extra","arrow","overlay","DownOutlined","fontSize","Component","withApollo","AutoPlay","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","arrows","map","ModalCom","children","onOk","onCancel","okTextTitle","titleText","footer","top","okText","Meta","Card","LinelistCom","handleModal","list","show_data","gutter","xs","sm","registered_date","dis","hoverable","cover","Text","Search","Input","Option","Select","TextArea","setTimeout","loader","filter","createdAt","searchdata","handleChanges","handleopn","selectdata","handleselectopen","selectopen","handlerequest","datas","toLowerCase","includes","enterButton","onSearch","showSearch","filterOption","input","option","indexOf","rows","Admin","suffix","Forms","validity","moviename","uuid","Date","disabled","allowClear","Mymovie","avatar","danger","PasswordChange","otp","RollbackOutlined","Notification","CheckCircleOutlined","Home","Content","Forget","MailOutlined","Step","Steps","Stepper","steps","current","item","content","SignIn","next","handleSubmitotp","handleSubmits","first_name","last_name","profile_img","handleSubmitSigin","newpassword","display","justifyContent","MobileOutlined","RouterApp","exact","path","component","localStorageKeys","httpLink","HttpLink","uri","httpLinkAuth","ApolloLink","operation","forward","tokenValue","setContext","Authorization","concat","wsLink","WebSocketLink","options","reconnect","connectionParams","link","split","getMainDefinition","kind","ApolloGQLClient","ApolloClient","from","cache","InMemoryCache","connectToDevTools","AppGQLClient","AuthContext","createContext","user","setAuth","netWorkCallMethods","config","AppAuth","isRefreshed","refreshAPI","isAuthorized","Promise","reject","regex","RegExp","match","navigator","onLine","newHeader","Axios","networkCall","api_url","auth_token","removeItem","Provider","Root","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.906eab17.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Input,\r\n  message,\r\n  notification,\r\n  Form,\r\n  Avatar,\r\n  Typography,\r\n  Row,\r\n  Col\r\n} from 'antd'\r\nimport * as React from 'react'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  ArrowRightOutlined\r\n} from '@ant-design/icons'\r\nimport './styled.css'\r\nconst { Title } = Typography\r\nclass Login extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      username: null,\r\n      password: null\r\n    }\r\n  }\r\n\r\n  setInputValue = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  handleSubmit = async () => {\r\n    await message.loading('Login In....', 5)\r\n    fetch('http://3.141.17.227:3001/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n    })\r\n      .then(data => {\r\n        return data.json()\r\n      })\r\n      .then(response => {\r\n        if (response.info === 'login sucess') {\r\n          notification.success({\r\n            message: 'Success',\r\n            description: 'User login has been successful!'\r\n          })\r\n          localStorage.setItem('token', response?.token)\r\n          localStorage.setItem('user_id', response?.data?.id)\r\n          this.props.history.push('/home')\r\n        } else {\r\n          message.error('Faild to login', 5)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        message.error(error, 5)\r\n      })\r\n  }\r\n  render () {\r\n    const { username, password } = this.state\r\n    return (\r\n      <div className='main-login'>\r\n        <Row style={{ height: '100%' }}>\r\n          <Col md={{ span: 24 }} lg={{ span: 12 }} className='f-col'>\r\n            <div className='main'>\r\n              <Form\r\n                name='normal_login'\r\n                className='login-form'\r\n                onFinish={() => this.handleSubmit()}\r\n              >\r\n                <Avatar\r\n                  size={54}\r\n                  src='assets/TITLES (2).png'\r\n                  className='avatar'\r\n                />\r\n                <Title level={3} className='title'>\r\n                  Sign In\r\n                </Title>\r\n                <Form.Item\r\n                  name='username'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter your username!'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    autoFocus\r\n                    autoComplete='off'\r\n                    className='Input'\r\n                    onChange={e =>\r\n                      this.setInputValue('username', e.target.value)\r\n                    }\r\n                    prefix={<UserOutlined className='site-form-item-icon' />}\r\n                    value={username}\r\n                    placeholder='Username'\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name='password'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'please enter your password!'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    value={password}\r\n                    autoComplete='off'\r\n                    className='Input'\r\n                    onChange={e =>\r\n                      this.setInputValue('password', e.target.value)\r\n                    }\r\n                    prefix={<LockOutlined className='site-form-item-icon' />}\r\n                    type='password'\r\n                    placeholder='Password'\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item style={{ margin: 0 }}>\r\n                  {/* <Form.Item name='remember' valuePropName='checked' noStyle>\r\n                    <span className='login-form-keep'>Keep me login</span>\r\n                  </Form.Item> */}\r\n\r\n                  <span\r\n                    className='login-form-forgot'\r\n                    onClick={() => this.props.history.push('/forget')}\r\n                  >\r\n                    Forgot password\r\n                  </span>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type='primary'\r\n                    htmlType='submit'\r\n                    className='login-form-button'\r\n                    // onClick={() => this.handleSubmit()}\r\n                  >\r\n                    Log in <ArrowRightOutlined className='loginIcon' />\r\n                  </Button>\r\n                  <span className='login-form-register'>\r\n                    You don't have an account?{' '}\r\n                    <span\r\n                      style={{ cursor: 'pointer', textDecoration: 'underline' }}\r\n                      onClick={() => this.props.history.push('/signin')}\r\n                    >\r\n                      SignUp\r\n                    </span>{' '}\r\n                  </span>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>{' '}\r\n          </Col>\r\n          <Col span={12} className='s-col'>\r\n            <div className='circle-ripple'></div>\r\n            <img\r\n              style={{ width: '100%', height: '100%' }}\r\n              alt='img'\r\n              src='https://s3-eu-central-1.amazonaws.com/centaur-wp/marketingweek/prod/content/uploads/2020/05/20125057/shutterstock_586719869-750x500.jpg'\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","const routes = {\r\n    admin:'/admin',\r\n    Login: \"/login\",\r\n    forget:\"/forget\",\r\n    HomeCom:\"/home\", \r\n    signIn:\"/signin\", \r\n    form:\"/form\",\r\n    mymovie:\"/mymovie\",\r\n    notification:\"/notification\",\r\n    passwordchange:\"/passwordchange\",\r\n} \r\nexport default routes;","import gql from \"graphql-tag\";\r\nvar allMoviesTitles = gql `query MyQuery {\r\n  allMovieTitles {\r\n    nodes {\r\n    name\r\n    id\r\n    createdAt\r\n    price\r\n    movieImage\r\n    description\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const userProfileById = (id) => {\r\n  return gql `query MyQuery {\r\n    userProfileById(id: \"${id}\") {\r\n      id\r\n      email\r\n      createdAt\r\n      birthday\r\n      firstName\r\n      lastName\r\n      mobileNo\r\n      profileImg\r\n    }\r\n  }\r\n  `;\r\n}\r\nexport const createMovieTitle = (name, price, description, movieImage, id, user_id, date) => {\r\n  debugger\r\n  return gql `mutation {\r\n      createMovieTitle(\r\n        input: {\r\n          movieTitle: {\r\n            name: \"${name}\"\r\n            price: \"${price}\"\r\n            description: \"${description}\"\r\n            movieImage: \"${movieImage}\"\r\n            id: \"${id}\"\r\n            isPurchase: false\r\n            updatedBy: \"${user_id}\"\r\n            createdBy: \"${user_id}\"\r\n            createdAt: \"${date}\"\r\n            updatedAt: \"${date}\"\r\n            isActive: true\r\n          }\r\n        }\r\n      ) {\r\n        clientMutationId\r\n      }\r\n    }\r\n    `;\r\n}\r\nexport const updateUserProfileById = (firstName, lastName, email, mobile_no, birthday, movieImage, id) => {\r\n  debugger\r\n  return gql `mutation {\r\n    updateUserProfileById(\r\n      input: {\r\n        userProfilePatch: {\r\n          birthday: \"${birthday}\"\r\n          email: \"${email}\"\r\n          firstName: \"${firstName}\"\r\n          lastName: \"${lastName}\"\r\n          mobileNo: \"${mobile_no}\"\r\n          profileImg: \"${movieImage}\"\r\n        }\r\n        id: \"${id}\"\r\n      }\r\n    ) {\r\n      clientMutationId\r\n    }\r\n  }\r\n    `;\r\n}\r\nexport {\r\n  allMoviesTitles,\r\n}","import React from 'react'\r\nimport {\r\n  PageHeader,\r\n  Upload,\r\n  Breadcrumb,\r\n  Dropdown,\r\n  Menu,\r\n  Drawer,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  message,\r\n  notification,\r\n  Badge\r\n} from 'antd'\r\nimport { DownOutlined } from '@ant-design/icons'\r\nimport './styled.css'\r\nimport moment from 'moment'\r\nimport { withApollo } from 'react-apollo'\r\nimport {\r\n  userProfileById,\r\n  updateUserProfileById,\r\n  allMoviesTitles\r\n} from '../../hooks/query'\r\n\r\nclass Header extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      mobile_no: null,\r\n      birthday: null,\r\n      fileList: [],\r\n      movieImage: null,\r\n      id: null,\r\n      listdata: []\r\n    }\r\n  }\r\n  componentDidMount = async () => {\r\n    this.props.client\r\n      .query({\r\n        query: userProfileById(localStorage.getItem('user_id'))\r\n      })\r\n      .then(response => {\r\n        if (response?.data) {\r\n          const data = response?.data?.userProfileById\r\n          this.setState({\r\n            firstName: data?.firstName,\r\n            lastName: data?.lastName,\r\n            mobile_no: data?.mobileNo,\r\n            birthday: moment(data?.birthday).format('YYYY-MM-DD'),\r\n            email: data?.email,\r\n            movieImage: data?.profileImg,\r\n            id: data?.id\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err:', err)\r\n      })\r\n    this.props.client\r\n      .query({\r\n        query: allMoviesTitles\r\n      })\r\n      .then(response => {\r\n        if (response?.data) {\r\n          this.setState({\r\n            listdata: response?.data?.allMovieTitles?.nodes\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err:', err)\r\n      })\r\n  }\r\n  logout = () => {\r\n    localStorage.clear()\r\n    this.props.history.push('/login')\r\n  }\r\n  handleopen = () => {\r\n    const state = this.state\r\n    this.setState({\r\n      open: !state.open\r\n    })\r\n  }\r\n  handlechange = (n, v) => {\r\n    const state = this.state\r\n    this.setState({\r\n      ...state,\r\n      [n]: v\r\n    })\r\n  }\r\n  getBase64 = (img, callback) => {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result))\r\n    return reader.readAsDataURL(img)\r\n  }\r\n  handleChange = e => {\r\n    if (!e.file.originFileObj) {\r\n      return\r\n    }\r\n\r\n    this.getBase64(e.file.originFileObj, imageUrl => {\r\n      this.setState({\r\n        fileList: [\r\n          {\r\n            uid: '-1',\r\n            name: e.file.name,\r\n            status: 'done',\r\n            url: imageUrl\r\n          }\r\n        ],\r\n        movieImage: imageUrl\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      mobile_no,\r\n      birthday,\r\n      movieImage,\r\n      id\r\n    } = this.state\r\n    if (!movieImage) {\r\n      message.error('Please upload the movie image', 5)\r\n      return false\r\n    }\r\n\r\n    await message.loading('Loading....', 5)\r\n    this.props.client\r\n      .mutate({\r\n        variables: {},\r\n        mutation: updateUserProfileById(\r\n          firstName,\r\n          lastName,\r\n          email,\r\n          mobile_no,\r\n          moment(birthday).format('YYYY-MM-DD'),\r\n          movieImage,\r\n          id\r\n        )\r\n      })\r\n      .then(res => {\r\n        notification.success({\r\n          message: 'Success',\r\n          description: 'Your profile has been updated!'\r\n        })\r\n        console.log('res:', res)\r\n      })\r\n      .catch(err => {\r\n        message.error(err, 5)\r\n      })\r\n  }\r\n  render () {\r\n    const {\r\n      open,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      mobile_no,\r\n      birthday,\r\n      fileList,\r\n      listdata\r\n    } = this.state\r\n    const location = window.location.pathname\r\n    return (\r\n      <div className='headermain'>\r\n        <Drawer\r\n          title='Profile Details'\r\n          placement='right'\r\n          onClose={() => this.handleopen()}\r\n          visible={open}\r\n          width={310}\r\n        >\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Upload\r\n              onChange={e => this.handleChange(e)}\r\n              action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n              fileList={fileList}\r\n              multiple={false}\r\n              listType='picture-card'\r\n              onRemove={() =>\r\n                this.setState({\r\n                  fileList: [],\r\n                  movieImage: null\r\n                })\r\n              }\r\n            >\r\n              Image Upload\r\n            </Upload>\r\n            <Form name='normal_login' onFinish={() => this.handleSubmit()}>\r\n              <br />\r\n              <Input\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                value={firstName}\r\n                size='large'\r\n                onChange={e => this.handlechange('firstName', e.target.value)}\r\n                placeholder='FirstName'\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <Input\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                value={lastName}\r\n                size='large'\r\n                required\r\n                onChange={e => this.handlechange('lastName', e.target.value)}\r\n                placeholder='LastName'\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <Input\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                value={email}\r\n                size='large'\r\n                onChange={e => this.handlechange('email', e.target.value)}\r\n                placeholder='email'\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <Input\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                value={mobile_no}\r\n                size='large'\r\n                onChange={e => this.handlechange('mobile_no', e.target.value)}\r\n                placeholder='mobile_no'\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <Input\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                value={moment(birthday).format('YYYY-MM-DD')}\r\n                size='large'\r\n                onChange={e => this.handlechange('birthday', e.target.value)}\r\n                placeholder='birthday'\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                className='login-form-button'\r\n              >\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </Drawer>\r\n        <PageHeader\r\n          ghost={false}\r\n          title={\r\n            <Breadcrumb separator={false} className='Breadcrumb'>\r\n              <Breadcrumb.Item className='home'>\r\n                <img\r\n                  className='imgss'\r\n                  alt='img'\r\n                  style={{\r\n                    position: 'absolute',\r\n                    marginTop: -8\r\n                  }}\r\n                  src='assets/TITLES (2).png'\r\n                />\r\n              </Breadcrumb.Item>\r\n\r\n              <div className='center_of'>\r\n                <Breadcrumb.Item\r\n                  className={`home ${location === '/home' && 'active'}`}\r\n                  onClick={() => this.props.history.push('/home')}\r\n                >\r\n                  Home\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item\r\n                  className={`home ${location === '/mymovie' && 'active'}`}\r\n                  onClick={() => this.props.history.push('/mymovie')}\r\n                >\r\n                  My movies\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item\r\n                  className={`home ${location === '/notification' && 'active'}`}\r\n                  onClick={() => this.props.history.push('/notification')}\r\n                >\r\n                  <Badge\r\n                    size='small'\r\n                    count={listdata?.length}\r\n                    style={{ backgroundColor: '#52c41a', color: '#fff' }}\r\n                  >\r\n                    Notification\r\n                  </Badge>\r\n                </Breadcrumb.Item>\r\n              </div>\r\n            </Breadcrumb>\r\n          }\r\n          extra={[\r\n            <Dropdown\r\n              arrow\r\n              placement='bottomCenter'\r\n              overlay={\r\n                <Menu className='menulist_item'>\r\n                  <Menu.Item\r\n                    className='menulist_item'\r\n                    onClick={() => this.handleopen()}\r\n                  >\r\n                    Profile\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    className='menulist_item'\r\n                    onClick={() => this.logout()}\r\n                  >\r\n                    Logout\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n            >\r\n              <span\r\n                style={{\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                {' '}\r\n                More\r\n                <DownOutlined\r\n                  style={{\r\n                    fontSize: '15px',\r\n                    margin: '4px 0px 0px 2px',\r\n                    position: 'absolute'\r\n                  }}\r\n                />\r\n              </span>\r\n              {/* <Avatar\r\n                className='avatar_icon'\r\n                src='https://i.pinimg.com/564x/95/79/c1/9579c179f04e0f7c52cb3932ec916910.jpg'\r\n              /> */}\r\n            </Dropdown>\r\n          ]}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withApollo(Header)\r\n","import React, { Component } from 'react'\r\nimport Slider from 'react-slick'\r\nimport './styled.css'\r\n\r\nexport default class AutoPlay extends Component {\r\n  render () {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay: true,\r\n      speed: 1000,\r\n      autoplaySpeed: 2000,\r\n      arrows:false,\r\n    }\r\n    return (\r\n      <div className='main_carousel'>\r\n        <Slider className='sliders' {...settings}>\r\n          {[\r\n            'https://www.filmibeat.com/wimgm/1366x70/desktop/2020/01/master_3.jpg',\r\n            'https://1.bp.blogspot.com/-di4zJIry4tk/YBbtymPuG4I/AAAAAAAArI4/0OKS8xN3EqA_inm1AG8-93d5wMf6H1gzwCLcBGAsYHQ/s745/Karnan%2BMovie%2BImages%252C%2BHD%2BWallpapers.JPG',\r\n            'https://www.hdwallpapers.in/download/actor_karthi_hd_sulthan-HD.jpg'\r\n          ].map(v => {\r\n            return (\r\n              <div className='sliders'>\r\n                <img src={v} alt='img' />\r\n              </div>\r\n            )\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Modal } from 'antd'\r\nimport './styled.css'\r\nclass ModalCom extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  render () {\r\n    const {\r\n      open,\r\n      children,\r\n      onOk,\r\n      onCancel,\r\n      okTextTitle,\r\n      titleText,\r\n      footer\r\n    } = this.props\r\n    return (\r\n      <Modal\r\n        className='modal-of-com'\r\n        title={titleText && titleText}\r\n        style={{ top: 20 }}\r\n        visible={open && open}\r\n        onOk={() => onOk && onOk()}\r\n        onCancel={() => onCancel && onCancel()}\r\n        okText={okTextTitle && okTextTitle}\r\n        footer={footer && footer}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModalCom\r\n","import React from 'react'\r\nimport './styled.css'\r\nimport { Card, Row, Col, Typography } from 'antd'\r\nimport ModalCom from '../comman/dialogbox'\r\n\r\nconst { Meta } = Card\r\nconst { Title } = Typography\r\nclass LinelistCom extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      show_data: null\r\n    }\r\n  }\r\n  handleModal = list => {\r\n    const state = this.state\r\n    this.setState({\r\n      ...state,\r\n      open: !state.open,\r\n      show_data: list\r\n    })\r\n  }\r\n  render () {\r\n    const { open, show_data } = this.state\r\n    const { listdata } = this.props\r\n    return (\r\n      <div className='linelist_main'>\r\n        <ModalCom\r\n          open={open}\r\n          onCancel={() => this.handleModal()}\r\n          okText={false}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col xs={{ span: 24 }} sm={{ span: 12 }}>\r\n              <img style={{ width: '100%' }} alt='img' src={show_data?.img} />\r\n            </Col>\r\n            <Col xs={{ span: 24 }} sm={{ span: 12 }}>\r\n              <Title level={5} className='modal_title'>\r\n                <label>Name :</label>\r\n                {show_data?.name}\r\n              </Title>\r\n              {/* <Title level={5} className='modal_title'>\r\n                <label>Registered name :</label>\r\n                {show_data?.registered_name}\r\n              </Title> */}\r\n              <Title level={5} className='modal_title'>\r\n                <label>Registered date :</label> {show_data?.registered_date}\r\n              </Title>\r\n            </Col>\r\n            <Title level={5} className='modal_title_dis'>\r\n              <label>Short description of movie :</label> {show_data?.dis}\r\n            </Title>\r\n          </Row>\r\n        </ModalCom>\r\n        <Row gutter={16}>\r\n          {listdata?.map(list => {\r\n            return (\r\n              <Col xs={{ span: 24 }} sm={{ span: 12 }} md={{ span: 6 }}>\r\n                <Card\r\n                  onClick={() => this.handleModal(list)}\r\n                  hoverable\r\n                  cover={<img alt='example' src={list?.img} />}\r\n                >\r\n                  <Meta title={list?.name} />\r\n                </Card>\r\n              </Col>\r\n            )\r\n          })}\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LinelistCom\r\n","import React from 'react'\r\nimport { Typography, Input, message, Empty, Button, Select, Spin } from 'antd'\r\n// import { VideoCameraOutlined } from '@ant-design/icons'\r\nimport './styled.css'\r\nimport AutoPlay from '../slider'\r\nimport ModalCom from '../comman/dialogbox'\r\nimport LinelistCom from '../lineList'\r\nimport { allMoviesTitles } from '../../hooks/query'\r\nimport { withApollo } from 'react-apollo'\r\nimport moment from 'moment'\r\nconst { Title, Text } = Typography\r\nconst { Search } = Input\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\nclass HomeCom extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      searchdata: '',\r\n      selectdata: '',\r\n      selectopen: false,\r\n      listdata: [],\r\n      loader: true\r\n    }\r\n  }\r\n  componentDidMount = async () => {\r\n    await setTimeout(() => this.setState({ loader: false }), 2000)\r\n    this.props.client\r\n      .query({\r\n        query: allMoviesTitles\r\n      })\r\n      .then(response => {\r\n        if (response?.data) {\r\n          const data = response?.data?.allMovieTitles?.nodes?.filter(v => {\r\n            v.registered_date = moment(v?.createdAt).format('DD/MM/YYYY')\r\n            v.img = v?.movieImage\r\n            v.dis = v?.description\r\n            return v\r\n          })\r\n          this.setState({\r\n            listdata: data,\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err:', err)\r\n      })\r\n  }\r\n  // Black Panther\r\n  handleSubmit = async e => {\r\n    if (!localStorage.getItem('token')) {\r\n      await message.info('Please sign in to continue...', 5)\r\n      this.props.history.push('/login')\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        searchdata: e\r\n      })\r\n    }\r\n  }\r\n  handleChanges = e => {\r\n    this.setState({\r\n      ...this.state,\r\n      searchdata: e\r\n    })\r\n  }\r\n  handleopn = () => {\r\n    const state = this.state\r\n    this.setState({\r\n      ...state,\r\n      open: !state.open\r\n    })\r\n  }\r\n  onChange = value => {\r\n    const state = this.state\r\n    this.setState({\r\n      ...state,\r\n      selectdata: value\r\n    })\r\n  }\r\n  handleselectopen = () => {\r\n    const state = this.state\r\n    this.setState({\r\n      ...state,\r\n      selectopen: !state.selectopen\r\n    })\r\n  }\r\n  handlerequest = async () => {\r\n    const state = this.state\r\n    this.setState({\r\n      ...state,\r\n      selectopen: !state.selectopen\r\n    })\r\n    await message.success(\r\n      'Your request has been sended successfully they will get you soon...!',\r\n      5\r\n    )\r\n    this.props.history.push('/admin')\r\n  }\r\n  render () {\r\n    const { open, searchdata, listdata, selectopen, loader } = this.state\r\n    const datas = listdata?.filter(v =>\r\n      v.name ? v.name?.toLowerCase().includes(searchdata.toLowerCase()) : v\r\n    )\r\n    return (\r\n      <div className='drivermain'>\r\n        {loader && (\r\n          <div className='loader'>\r\n            <Spin size='large' />\r\n          </div>\r\n        )}\r\n        {!loader && (\r\n          <>\r\n            <ModalCom\r\n              open={open}\r\n              onCancel={() => this.handleopn()}\r\n              okText={false}\r\n            >\r\n              I'll explain to Soon !\r\n            </ModalCom>\r\n            <AutoPlay />\r\n            <div className='search'>\r\n              <Title level={4} className='title'>\r\n                Title Search\r\n              </Title>\r\n              <Search\r\n                className='search_field'\r\n                placeholder='Search title...'\r\n                enterButton='Search'\r\n                size='large'\r\n                value={searchdata}\r\n                onChange={e => this.handleChanges(e.target.value)}\r\n                onSearch={e => {\r\n                  this.handleSubmit(e)\r\n                }}\r\n                // loading\r\n              />\r\n              <Text className='guidline' onClick={() => this.handleopn()}>\r\n                How to use this\r\n              </Text>\r\n              {searchdata && (\r\n                <LinelistCom searchdata={searchdata} listdata={datas} />\r\n              )}\r\n              {searchdata && !datas?.length > 0 && (\r\n                <div>\r\n                  <Empty />\r\n                  <Button\r\n                    className='pay_btn'\r\n                    // onClick={() => this.handleselectopen()}\r\n                    onClick={() => this.props.history.push('/form')}\r\n                  >\r\n                    Buy Now\r\n                  </Button>{' '}\r\n                </div>\r\n              )}\r\n              <ModalCom\r\n                open={selectopen}\r\n                onCancel={() => this.handleselectopen()}\r\n                okText={false}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: '100%', margin: '20px 0px' }}\r\n                  placeholder='Choose your plan'\r\n                  onChange={this.onChange}\r\n                  // onFocus={onFocus}\r\n                  // onBlur={onBlur}\r\n                  // onSearch={onSearch}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  <Option value='price $100 (1 year of validity)'>\r\n                    price $100 (1 year of validity)\r\n                  </Option>\r\n                  <Option value='price $500 (5 year of validity)'>\r\n                    price $500 (5 year of validity)\r\n                  </Option>\r\n                  <Option value='price $1000 (10 year of validity)'>\r\n                    price $1000 (10 year of validity)\r\n                  </Option>\r\n                </Select>\r\n                <TextArea rows={4} placeholder='Description' />\r\n                <br />\r\n                <Button\r\n                  className='continue_pay_btn'\r\n                  onClick={() => this.handlerequest()}\r\n                >\r\n                  Continue to Buy Now\r\n                </Button>{' '}\r\n              </ModalCom>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withApollo(HomeCom)\r\n","import React, { Component } from 'react'\r\nimport { Input, Row, Col, Button } from 'antd'\r\nimport './styeld.css'\r\nconst { TextArea } = Input\r\nclass Admin extends Component {\r\n  render () {\r\n    return (\r\n      <div className='main_admin'>\r\n        <Row gutter={16}>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }}>\r\n            <Input\r\n              placeholder='name'\r\n              value={'Black Panther'}\r\n              style={{ width: '100%' }}\r\n              suffix='name'\r\n            />\r\n          </Col>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }}>\r\n            <Input\r\n              placeholder='name'\r\n              value={'American superhero'}\r\n              style={{ width: '100%' }}\r\n              suffix='Registered Name'\r\n            />\r\n          </Col>\r\n          <br />\r\n          <br />\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }}>\r\n            <Input\r\n              placeholder='name'\r\n              value={'21/01/2021'}\r\n              style={{ width: '100%' }}\r\n              suffix='Registered Date'\r\n            />\r\n          </Col>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }}>\r\n            <TextArea\r\n              placeholder='name'\r\n              rows={4}\r\n              value={\r\n                'Black Panther is a 2018 American superhero film based on the Marvel Comics character of the same name. Produced by Marvel Studios and distributed by Walt Disney Studios Motion Pictures, it is the 18th film in the Marvel Cinematic Universe (MCU).'\r\n              }\r\n              style={{ width: '100%' }}\r\n              suffix='Description'\r\n            />\r\n          </Col>\r\n          <Button className='continue_submit_btn'>Submit</Button>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Admin\r\n","import {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Input,\r\n  Card,\r\n  Button,\r\n  Upload,\r\n  message,\r\n  notification,\r\n  Spin\r\n} from 'antd'\r\nimport * as React from 'react'\r\nimport './form.css'\r\nimport { withApollo } from 'react-apollo'\r\nimport moment from 'moment'\r\nimport { uuid } from 'uuidv4'\r\n\r\nimport { userProfileById, createMovieTitle } from '../../hooks/query'\r\nconst { Title } = Typography\r\nconst { Option } = Select\r\nclass Forms extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      name: null,\r\n      mobile_no: null,\r\n      email: null,\r\n      birthday: null,\r\n      moviename: null,\r\n      validity: null,\r\n      description: null,\r\n      movieImage: null,\r\n      fileList: [],\r\n      loader: true\r\n    }\r\n  }\r\n  componentDidMount = async () => {\r\n    await setTimeout(() => this.setState({ loader: false }), 2000)\r\n    this.props.client\r\n      .query({\r\n        query: userProfileById(localStorage.getItem('user_id'))\r\n      })\r\n      .then(response => {\r\n        if (response?.data) {\r\n          const data = response?.data?.userProfileById\r\n          this.setState({\r\n            name: data?.firstName + ' ' + data?.lastName,\r\n            mobile_no: data?.mobileNo,\r\n            birthday: moment(data?.birthday).format('YYYY-MM-DD'),\r\n            email: data?.email\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        message.error('Faild to fetch data', 5)\r\n      })\r\n  }\r\n  setInputValue = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  onChange = value => {\r\n    const state = this.state\r\n    this.setState({\r\n      ...state,\r\n      validity: value\r\n    })\r\n  }\r\n  handleSubmit = async () => {\r\n    const { moviename, description, validity, movieImage } = this.state\r\n    if (!movieImage) {\r\n      message.error('Please upload the movie image', 5)\r\n      return false\r\n    }\r\n    const data = {\r\n      'price $100 (1 year of validity)': '100',\r\n      'price $500 (5 year of validity)': '500',\r\n      'price $1000 (10 year of validity)': '1000'\r\n    }\r\n    await message.loading('Loading....', 5)\r\n    this.props.client\r\n      .mutate({\r\n        mutation: createMovieTitle(\r\n          moviename,\r\n          data[validity],\r\n          description,\r\n          movieImage,\r\n          uuid(),\r\n          localStorage.getItem('user_id'),\r\n          moment(new Date()).format('YYYY-MM-DD')\r\n        )\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        notification.success({\r\n          message: 'Success',\r\n          description: 'Your details has been successful!'\r\n        })\r\n        this.setState({ ...this.state })\r\n        this.props.history.push('/home')\r\n      })\r\n      .catch(err => {\r\n        message.error('Faild to fetch data', 5)\r\n      })\r\n  }\r\n  getBase64 = (img, callback) => {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result))\r\n    return reader.readAsDataURL(img)\r\n  }\r\n  handleChange = e => {\r\n    if (!e.file.originFileObj) {\r\n      return\r\n    }\r\n    this.getBase64(e.file.originFileObj, imageUrl => {\r\n      this.setState({\r\n        fileList: [\r\n          {\r\n            uid: '-1',\r\n            name: e.file.name,\r\n            status: 'done',\r\n            url: imageUrl\r\n          }\r\n        ],\r\n        movieImage: imageUrl\r\n      })\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      name,\r\n      mobile_no,\r\n      email,\r\n      birthday,\r\n      moviename,\r\n      validity,\r\n      description,\r\n      fileList,\r\n      loader\r\n    } = this.state\r\n    return (\r\n      <div className='main-form'>\r\n        <br />\r\n        <br />\r\n        {loader && (\r\n          <div className='loader'>\r\n            <Spin size='large' />\r\n          </div>\r\n        )}\r\n        {!loader && (\r\n          <>\r\n            {' '}\r\n            <Card title='Personal Details' className='cards'>\r\n              <Row gutter={16}>\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                  <Title level={5} className='titles'>\r\n                    User Name\r\n                  </Title>\r\n                  <Input\r\n                    style={{ width: '96%' }}\r\n                    placeholder='User Name'\r\n                    className='filed'\r\n                    disabled\r\n                    value={name}\r\n                    size='large'\r\n                  />\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                  <Title level={5} className='titles'>\r\n                    Date of birth\r\n                  </Title>\r\n                  <Input\r\n                    style={{ width: '96%' }}\r\n                    placeholder='Please input'\r\n                    className='filed'\r\n                    disabled\r\n                    size='large'\r\n                    value={birthday}\r\n                  />\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                  <Title level={5} className='titles'>\r\n                    Email\r\n                  </Title>\r\n                  <Input\r\n                    style={{ width: '96%' }}\r\n                    placeholder='Please input'\r\n                    className='filed'\r\n                    disabled\r\n                    size='large'\r\n                    value={email}\r\n                  />\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                  <Title level={5} className='titles'>\r\n                    Mobile Number\r\n                  </Title>\r\n                  <Input\r\n                    style={{ width: '96%' }}\r\n                    placeholder='Please input'\r\n                    className='filed'\r\n                    disabled\r\n                    size='large'\r\n                    value={mobile_no}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n            <Card title='Movie Details' className='cards'>\r\n              <Form\r\n                name='normal_login'\r\n                className='login-form'\r\n                onFinish={() => this.handleSubmit()}\r\n              >\r\n                <Row gutter={16}>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                    <Title level={5} className='titles'>\r\n                      Movie Image\r\n                    </Title>\r\n                    <Upload\r\n                      onChange={e => this.handleChange(e)}\r\n                      action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                      fileList={fileList}\r\n                      multiple={false}\r\n                      listType='picture-card'\r\n                      onRemove={() =>\r\n                        this.setState({\r\n                          fileList: [],\r\n                          movieImage: null\r\n                        })\r\n                      }\r\n                    >\r\n                      + Upload\r\n                    </Upload>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                    <Title level={5} className='titles'>\r\n                      Movie Name\r\n                    </Title>\r\n\r\n                    <Form.Item\r\n                      name='moviename'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter your movie name!'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        autoFocus\r\n                        style={{ width: '96%' }}\r\n                        autoComplete='off'\r\n                        className='Input'\r\n                        onChange={e =>\r\n                          this.setInputValue('moviename', e.target.value)\r\n                        }\r\n                        size='large'\r\n                        value={moviename}\r\n                        placeholder='Movie Name'\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                    <Title level={5} className='titles'>\r\n                      Choose your plan\r\n                    </Title>\r\n                    <Form.Item\r\n                      name='validity'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please select your validity!'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        style={{ width: '96%' }}\r\n                        placeholder='Choose yor plan'\r\n                        size='large'\r\n                        onChange={this.onChange}\r\n                        // onFocus={onFocus}\r\n                        // onBlur={onBlur}\r\n                        // onSearch={onSearch}\r\n                        value={validity}\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        <Option value='price $100 (1 year of validity)'>\r\n                          price $100 (1 year of validity)\r\n                        </Option>\r\n                        <Option value='price $500 (5 year of validity)'>\r\n                          price $500 (5 year of validity)\r\n                        </Option>\r\n                        <Option value='price $1000 (10 year of validity)'>\r\n                          price $1000 (10 year of validity)\r\n                        </Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n                    <Title level={5} className='titles'>\r\n                      Enter your description\r\n                    </Title>\r\n                    <Form.Item\r\n                      name='description'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter your description!'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input.TextArea\r\n                        style={{ width: '96%' }}\r\n                        onChange={e =>\r\n                          this.setInputValue('description', e.target.value)\r\n                        }\r\n                        value={description}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  type='primary'\r\n                  htmlType='submit'\r\n                  className='login-form-button'\r\n                >\r\n                  Proceed to Buynow\r\n                </Button>\r\n              </Form>\r\n            </Card>\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withApollo(Forms)\r\n","import { Spin, List, Avatar, Typography, Button } from 'antd'\r\nimport * as React from 'react'\r\nimport './styled.css'\r\nimport { withApollo } from 'react-apollo'\r\nimport { allMoviesTitles } from '../../hooks/query'\r\nimport moment from 'moment'\r\nconst { Title } = Typography\r\nclass Mymovie extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      loader: true,\r\n      listdata: []\r\n    }\r\n  }\r\n  componentDidMount = async () => {\r\n    await setTimeout(() => this.setState({ loader: false }), 2000)\r\n    this.props.client\r\n      .query({\r\n        query: allMoviesTitles\r\n      })\r\n      .then(response => {\r\n        if (response?.data) {\r\n          const data = response?.data?.allMovieTitles?.nodes\r\n          this.setState({\r\n            listdata: data\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err:', err)\r\n      })\r\n  }\r\n  render () {\r\n    const { loader, listdata } = this.state\r\n    return (\r\n      <div>\r\n        {loader && (\r\n          <div className='loader'>\r\n            <Spin size='large' />\r\n          </div>\r\n        )}\r\n        {!loader && (\r\n          <div className='mymovie_main'>\r\n            <Title level={5} className='m_title'>\r\n              Your Movies\r\n            </Title>\r\n            {listdata?.map(v => {\r\n              return (\r\n                <List.Item className='cards'>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={v?.movieImage} />}\r\n                    title={\r\n                      v?.name +\r\n                      ' ' +\r\n                      moment(v?.birthday).format('YYYY-MM-DD') +\r\n                      ' to ' +\r\n                      moment(v?.birthday).format('YYYY-MM-DD')\r\n                    }\r\n                    description={v?.description}\r\n                  />\r\n                  <div className='dis'>\r\n                    <Button type='primary' danger>\r\n                      Proceed to extend validity\r\n                    </Button>\r\n                  </div>\r\n                </List.Item>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withApollo(Mymovie)\r\n","import {\r\n  Row,\r\n  Typography,\r\n  Input,\r\n  message,\r\n  notification,\r\n  Form,\r\n  Button\r\n} from 'antd'\r\nimport * as React from 'react'\r\nimport { ArrowRightOutlined, RollbackOutlined } from '@ant-design/icons'\r\nimport './styled.css'\r\nconst { Title } = Typography\r\nclass PasswordChange extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      password: null,\r\n      otp: null\r\n    }\r\n  }\r\n  setInputValue = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  handleSubmit = async () => {\r\n    await message.loading('Loding...', 5)\r\n    fetch('http://3.141.17.227:3001/api/new_password', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        password: this.state.password,\r\n        otp: this.state.otp,\r\n        id: localStorage.getItem('forget_id')\r\n      })\r\n    })\r\n      .then(data => {\r\n        return data.json()\r\n      })\r\n      .then(response => {\r\n        if (response.info === 'password change successfully') {\r\n          notification.success({\r\n            message: 'Success',\r\n            description: 'Your password change successfully!'\r\n          })\r\n          this.props.history.push('/login')\r\n        } else {\r\n          message.error('Faild', 5)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        message.error(error, 5)\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { otp, password } = this.state\r\n    return (\r\n      <div className='passwordchange'>\r\n        <Row className='workspacelog'>\r\n          <Title level={5} className='dis_title'>\r\n            Forget password\r\n          </Title>\r\n          <Form\r\n            name='normal_login'\r\n            className='login-form'\r\n            onFinish={() => this.handleSubmit()}\r\n          >\r\n            <Form.Item\r\n              name='otp'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your otp!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input\r\n                size='large'\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                value={otp}\r\n                placeholder='Please enter OTP'\r\n                onChange={e => this.setInputValue('otp', e.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='password'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your password!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                size='large'\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                value={password}\r\n                type='password'\r\n                placeholder='Please enter password'\r\n                onChange={e => this.setInputValue('password', e.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                className='login-form-button'\r\n              >\r\n                Submit <ArrowRightOutlined className='loginIcon' />\r\n              </Button>\r\n              <span className='login-form-register'>\r\n                Back to your sign in &nbsp;\r\n                <span\r\n                  style={{ cursor: 'pointer', textDecoration: 'underline' }}\r\n                  onClick={() => this.props.history.push('/login')}\r\n                >\r\n                  Login <RollbackOutlined />\r\n                </span>{' '}\r\n              </span>\r\n            </Form.Item>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PasswordChange\r\n","import { Spin, List, Avatar, Typography } from 'antd'\r\nimport * as React from 'react'\r\nimport './styled.css'\r\nimport { withApollo } from 'react-apollo'\r\nimport { allMoviesTitles } from '../../hooks/query'\r\nimport { CheckCircleOutlined } from '@ant-design/icons'\r\nconst { Title } = Typography\r\nclass Notification extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      loader: true,\r\n      listdata: []\r\n    }\r\n  }\r\n  componentDidMount = async () => {\r\n    await setTimeout(() => this.setState({ loader: false }), 2000)\r\n    this.props.client\r\n      .query({\r\n        query: allMoviesTitles\r\n      })\r\n      .then(response => {\r\n        if (response?.data) {\r\n          const data = response?.data?.allMovieTitles?.nodes\r\n          this.setState({\r\n            listdata: data\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err:', err)\r\n      })\r\n  }\r\n  render () {\r\n    const { loader, listdata } = this.state\r\n    return (\r\n      <div>\r\n        {loader && (\r\n          <div className='loader'>\r\n            <Spin size='large' />\r\n          </div>\r\n        )}\r\n        {!loader && (\r\n          <div className='notification_main'>\r\n            <Title level={5} className='m_title'>\r\n              Your Notifications\r\n            </Title>\r\n            {listdata?.map(v => {\r\n              return (\r\n                <List.Item className='cards'>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={v?.movieImage} />}\r\n                    title={v?.name}\r\n                    description={v?.description}\r\n                  />\r\n                  <div className='dis'>\r\n                    <CheckCircleOutlined /> verified\r\n                  </div>\r\n                </List.Item>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withApollo(Notification)\r\n","import { Row, Col } from 'antd'\r\nimport * as React from 'react'\r\nimport routes from '../../router/router'\r\nimport Header from '../../components/header/index'\r\nimport HomeCom from '../../components/home'\r\nimport Admin from '../../components/admin'\r\nimport Form from '../../components/form/index'\r\nimport Mymovie from '../../components/mymoive/index'\r\nimport PasswordChange from \"../../screen/password/index\"\r\nimport Notification from '../../components/notification/index'\r\nclass Home extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  Content = () => {\r\n    if (window.location.pathname === routes.passwordchange) {\r\n      return <PasswordChange {...this.props} />\r\n    }else if (window.location.pathname === routes.notification) {\r\n      return <Notification {...this.props} />\r\n    } else if (window.location.pathname === routes.mymovie) {\r\n      return <Mymovie {...this.props} />\r\n    } else if (window.location.pathname === routes.form) {\r\n      return <Form {...this.props} />\r\n    } else if (window.location.pathname === routes.admin) {\r\n      return <Admin {...this.props} />\r\n    } else if (window.location.pathname === routes.HomeCom ) {\r\n      return <HomeCom {...this.props} />\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n      <Row style={{ width: 'max-content' }}>\r\n        <Col>\r\n          {' '}\r\n          <Header {...this.props} />\r\n          {this.Content()}\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default Home\r\n","import {\r\n  Row,\r\n  Typography,\r\n  Input,\r\n  message,\r\n  notification,\r\n  Form,\r\n  Button\r\n} from 'antd'\r\nimport * as React from 'react'\r\nimport { ArrowRightOutlined, RollbackOutlined } from '@ant-design/icons'\r\nimport './styled.css'\r\nimport { MailOutlined } from '@ant-design/icons'\r\nconst { Title } = Typography\r\nclass Forget extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      email: null\r\n    }\r\n  }\r\n  handleSubmit = async () => {\r\n    await message.loading('Loding...', 5)\r\n    fetch('http://3.141.17.227:3001/api/forget_password', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: this.state.email\r\n      })\r\n    })\r\n      .then(data => {\r\n        return data.json()\r\n      })\r\n      .then(response => {\r\n        if (response.info === 'email send successfully') {\r\n          notification.success({\r\n            message: 'Success',\r\n            description: 'Your email sended successful!'\r\n          })\r\n          this.props.history.push('/passwordchange')\r\n          localStorage.setItem('forget_id', response?.data?.id)\r\n        } else {\r\n          message.error('Faild', 5)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        message.error(error, 5)\r\n      })\r\n  }\r\n  setInputValue = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  render () {\r\n    const { email } = this.state\r\n    return (\r\n      <div className='workspace'>\r\n        <Row className='workspacelog'>\r\n          <Title level={5} className='dis_title'>\r\n            Forget password\r\n          </Title>\r\n          <Form\r\n            name='normal_login'\r\n            className='login-form'\r\n            onFinish={() => this.handleSubmit()}\r\n          >\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your mail!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input\r\n                size='large'\r\n                autoFocus\r\n                autoComplete='off'\r\n                className='Input'\r\n                prefix={<MailOutlined />}\r\n                value={email}\r\n                onChange={e =>\r\n                  this.setInputValue('email', e.target.value)\r\n                }\r\n                placeholder='example@gmail.com'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                className='login-form-button'\r\n              >\r\n                Submit <ArrowRightOutlined className='loginIcon' />\r\n              </Button>\r\n              <span className='login-form-register'>\r\n                Back to your sign in &nbsp;\r\n                <span\r\n                  style={{ cursor: 'pointer', textDecoration: 'underline' }}\r\n                  onClick={() => this.props.history.push('/login')}\r\n                >\r\n                  Login <RollbackOutlined />\r\n                </span>{' '}\r\n              </span>\r\n            </Form.Item>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Forget\r\n","import { Steps } from 'antd'\r\nimport * as React from 'react'\r\nimport './styled.css'\r\nconst { Step } = Steps\r\nclass Stepper extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  render () {\r\n    const { steps, current } = this.props\r\n    return (\r\n      <div className='stepper_login'>\r\n        <Steps current={current}>\r\n          {steps.map(item => (\r\n            <Step key={item.title} title={item.title} />\r\n          ))}\r\n        </Steps>\r\n        <div className='steps-content'>{steps[current].content}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stepper\r\n","import {\r\n  Button,\r\n  Input,\r\n  message,\r\n  notification,\r\n  Form,\r\n  Avatar,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  // Upload\r\n} from 'antd'\r\nimport * as React from 'react'\r\nimport moment from 'moment'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  ArrowRightOutlined,\r\n  RollbackOutlined,\r\n  MobileOutlined\r\n} from '@ant-design/icons'\r\nimport './styled.css'\r\nimport Stepper from './stepper'\r\nconst { Title } = Typography\r\nclass SignIn extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      first_name: null,\r\n      last_name: null,\r\n      password: null,\r\n      mobile_no: null,\r\n      email: null,\r\n      otp: null,\r\n      newpassword: null,\r\n      current: 0,\r\n      birthday: null,\r\n      movieImage: null,\r\n      fileList: []\r\n    }\r\n  }\r\n  next = () => {\r\n    const state = this.state\r\n    this.setState({ current: state.current + 1 })\r\n  }\r\n\r\n  setInputValue = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  handleSubmitotp = async () => {\r\n    await message.loading('Loading....', 5)\r\n    this.next()\r\n  }\r\n  handleSubmits = async () => {\r\n    const { password, mobile_no } = this.state\r\n    // if (!movieImage) {\r\n    //   message.error('Please upload the movie image', 5)\r\n    //   return false\r\n    // }\r\n    if (mobile_no?.length !== 10) {\r\n      message.error('Please enter valid mobile number', 5)\r\n      return false\r\n    } else if (password?.length < 8) {\r\n      message.error('Please enter the password min length 8', 5)\r\n      return false\r\n    }\r\n    await message.loading('Loading....', 5)\r\n    fetch('http://3.141.17.227:3001/api/sign_up', {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        birthday: moment(this.state.birthday).format('YYYY-MM-DD'),\r\n        mobile_no: this.state.mobile_no,\r\n        first_name: this.state.first_name,\r\n        last_name: this.state.last_name,\r\n        profile_img: ''\r\n      })\r\n    })\r\n      .then(data => {\r\n        return data.json()\r\n      })\r\n      .then(response => {\r\n        if (response.info === 'user create successfully') {\r\n          notification.success({\r\n            message: 'Success',\r\n            description: 'Your account created has been successful!'\r\n          })\r\n          // localStorage.setItem('token', response?.token)\r\n          // localStorage.setItem('user_id', response?.data?.id)\r\n          this.props.history.push('/login')\r\n        } else {\r\n          message.error('Faild to Sign In', 5)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        message.error('Faild to Sign In', 5)\r\n      })\r\n  }\r\n  handleSubmitSigin = async () => {\r\n    await message.loading('Loading....', 5)\r\n    notification.success({\r\n      message: 'Success',\r\n      description: 'Your account created has been successful!'\r\n    })\r\n    localStorage.setItem('token', 'token')\r\n    this.props.history.push('/home')\r\n  }\r\n  handleSubmit = async () => {\r\n    // await message.loading('Loading....', 5)\r\n    // this.next()\r\n  }\r\n  getBase64 = (img, callback) => {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result))\r\n    return reader.readAsDataURL(img)\r\n  }\r\n  handleChange = e => {\r\n    if (!e.file.originFileObj) {\r\n      return\r\n    }\r\n    this.getBase64(e.file.originFileObj, imageUrl => {\r\n      this.setState({\r\n        fileList: [\r\n          {\r\n            uid: '-1',\r\n            name: e.file.name,\r\n            status: 'done',\r\n            url: imageUrl\r\n          }\r\n        ],\r\n        movieImage: imageUrl\r\n      })\r\n    })\r\n  }\r\n  render () {\r\n    const {\r\n      first_name,\r\n      last_name,\r\n      current,\r\n      email,\r\n      mobile_no,\r\n      otp,\r\n      newpassword,\r\n      password,\r\n      birthday,\r\n      // fileList\r\n    } = this.state\r\n    return (\r\n      <div className='main-login'>\r\n        <Row style={{ height: '100%' }}>\r\n          <Col md={{ span: 24 }} lg={{ span: 12 }} className='f-col'>\r\n            <Stepper\r\n              current={current}\r\n              steps={[\r\n                {\r\n                  content: (\r\n                    <>\r\n                      <div className='main'>\r\n                        <Form\r\n                          name='normal_login'\r\n                          className='login-form'\r\n                          onFinish={() => this.handleSubmit()}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              display: 'flex',\r\n                              justifyContent: 'center'\r\n                            }}\r\n                          >\r\n                            <Avatar\r\n                              size={54}\r\n                              src='assets/TITLES (2).png'\r\n                              className='avatar'\r\n                            />\r\n                            <Title level={3} className='title'>\r\n                              Sign Up\r\n                            </Title>\r\n                          </span>\r\n                          {/* <Upload\r\n                            onChange={e => this.handleChange(e)}\r\n                            action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                            fileList={fileList}\r\n                            multiple={false}\r\n                            onRemove={() =>\r\n                              this.setState({\r\n                                fileList: [],\r\n                                movieImage: null\r\n                              })\r\n                            }\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                padding: 8,\r\n                                border: '1px solid #d9d9d9'\r\n                              }}\r\n                            >\r\n                              + Upload\r\n                            </span>\r\n                          </Upload> */}\r\n                          {/* <br /> */}\r\n                          <Form.Item\r\n                            name='first_name'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your first name!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              autoFocus\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              prefix={\r\n                                <UserOutlined className='site-form-item-icon' />\r\n                              }\r\n                              value={first_name}\r\n                              onChange={e =>\r\n                                this.setInputValue('first_name', e.target.value)\r\n                              }\r\n                              placeholder='First Name'\r\n                            />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name='last_name'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your last name!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              onChange={e =>\r\n                                this.setInputValue('last_name', e.target.value)\r\n                              }\r\n                              prefix={\r\n                                <UserOutlined className='site-form-item-icon' />\r\n                              }\r\n                              value={last_name}\r\n                              placeholder='Last Name'\r\n                            />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name='email'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your mail!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              prefix={\r\n                                <MailOutlined className='site-form-item-icon' />\r\n                              }\r\n                              onChange={e =>\r\n                                this.setInputValue('email', e.target.value)\r\n                              }\r\n                              value={email}\r\n                              placeholder='Email'\r\n                              type='email'\r\n                            />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name='birthday'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your date of birth!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <DatePicker\r\n                              value={birthday}\r\n                              style={{ width: '100%' }}\r\n                              onChange={e => this.setInputValue('birthday', e)}\r\n                            />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name='mobilenumber'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your mobilenumber!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              prefix={\r\n                                <MobileOutlined className='site-form-item-icon' />\r\n                              }\r\n                              onChange={e =>\r\n                                this.setInputValue('mobile_no', e.target.value)\r\n                              }\r\n                              value={mobile_no}\r\n                              placeholder='Mobile Number'\r\n                              type='number'\r\n                            />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name='password'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your password!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input.Password\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              prefix={\r\n                                <LockOutlined className='site-form-item-icon' />\r\n                              }\r\n                              onChange={e =>\r\n                                this.setInputValue('password', e.target.value)\r\n                              }\r\n                              type='password'\r\n                              value={password}\r\n                              placeholder='Current Password'\r\n                            />\r\n                          </Form.Item>\r\n                          <Form.Item>\r\n                            <Button\r\n                              type='primary'\r\n                              htmlType='submit'\r\n                              className='login-form-button'\r\n                              onClick={() => this.handleSubmits()}\r\n                            >\r\n                              Submit{' '}\r\n                              <ArrowRightOutlined className='loginIcon' />\r\n                            </Button>\r\n                            <span className='login-form-register'>\r\n                              Back to your &nbsp;\r\n                              <span\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  textDecoration: 'underline'\r\n                                }}\r\n                                onClick={() =>\r\n                                  this.props.history.push('/login')\r\n                                }\r\n                              >\r\n                                Sign in <RollbackOutlined />\r\n                              </span>{' '}\r\n                            </span>\r\n                          </Form.Item>\r\n                        </Form>\r\n                      </div>\r\n                    </>\r\n                  )\r\n                },\r\n                {\r\n                  content: (\r\n                    <>\r\n                      <div className='main'>\r\n                        <Form\r\n                          name='normal_login'\r\n                          className='login-form'\r\n                          onFinish={() => this.handleSubmitotp()}\r\n                        >\r\n                          <Avatar\r\n                            size={54}\r\n                            src='https://i.pinimg.com/564x/95/79/c1/9579c179f04e0f7c52cb3932ec916910.jpg'\r\n                            className='avatar'\r\n                          />\r\n                          <Title level={3} className='title'>\r\n                            Enter your OTP\r\n                          </Title>\r\n\r\n                          <Form.Item\r\n                            name='otp'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your OTP!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              prefix={\r\n                                <MailOutlined className='site-form-item-icon' />\r\n                              }\r\n                              value={otp}\r\n                              placeholder='OTP Number'\r\n                              type='number'\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item>\r\n                            <Button\r\n                              type='primary'\r\n                              htmlType='submit'\r\n                              className='login-form-button'\r\n                              // onClick={() => this.handleSubmit()}\r\n                            >\r\n                              Submit{' '}\r\n                              <ArrowRightOutlined className='loginIcon' />\r\n                            </Button>\r\n                            <span className='login-form-register'>\r\n                              Back to your &nbsp;\r\n                              <span\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  textDecoration: 'underline'\r\n                                }}\r\n                                onClick={() =>\r\n                                  this.props.history.push('/login')\r\n                                }\r\n                              >\r\n                                Sign in <RollbackOutlined />\r\n                              </span>{' '}\r\n                            </span>\r\n                          </Form.Item>\r\n                        </Form>\r\n                      </div>\r\n                    </>\r\n                  )\r\n                },\r\n                {\r\n                  content: (\r\n                    <>\r\n                      <div className='main'>\r\n                        <Form\r\n                          name='normal_login'\r\n                          className='login-form'\r\n                          onFinish={() => this.handleSubmitSigin()}\r\n                        >\r\n                          <Avatar\r\n                            size={54}\r\n                            src='https://i.pinimg.com/564x/95/79/c1/9579c179f04e0f7c52cb3932ec916910.jpg'\r\n                            className='avatar'\r\n                          />\r\n                          <Title level={3} className='title'>\r\n                            Enter your password\r\n                          </Title>\r\n\r\n                          <Form.Item\r\n                            name='password'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your password!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input.Password\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              prefix={\r\n                                <LockOutlined className='site-form-item-icon' />\r\n                              }\r\n                              type='password'\r\n                              value={password}\r\n                              placeholder='Current Password'\r\n                            />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name='newpassword'\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: 'Please enter your new password!'\r\n                              }\r\n                            ]}\r\n                          >\r\n                            <Input.Password\r\n                              autoComplete='off'\r\n                              className='Input'\r\n                              prefix={\r\n                                <LockOutlined className='site-form-item-icon' />\r\n                              }\r\n                              type='password'\r\n                              value={newpassword}\r\n                              placeholder='New Password'\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item>\r\n                            <Button\r\n                              type='primary'\r\n                              htmlType='submit'\r\n                              className='login-form-button'\r\n                              // onClick={() => this.handleSubmit()}\r\n                            >\r\n                              Submit{' '}\r\n                              <ArrowRightOutlined className='loginIcon' />\r\n                            </Button>\r\n                            <span className='login-form-register'>\r\n                              Back to your &nbsp;\r\n                              <span\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  textDecoration: 'underline'\r\n                                }}\r\n                                onClick={() =>\r\n                                  this.props.history.push('/login')\r\n                                }\r\n                              >\r\n                                Sign in <RollbackOutlined />\r\n                              </span>{' '}\r\n                            </span>\r\n                          </Form.Item>\r\n                        </Form>\r\n                      </div>\r\n                    </>\r\n                  )\r\n                }\r\n              ]}\r\n            />\r\n          </Col>\r\n          <Col span={12} className='s-col'>\r\n            <div className='circle-ripple'></div>\r\n            <img\r\n              style={{ width: '100%', height: '100%' }}\r\n              alt='img'\r\n              src='https://s3-eu-central-1.amazonaws.com/centaur-wp/marketingweek/prod/content/uploads/2020/05/20125057/shutterstock_586719869-750x500.jpg'\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignIn\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n// import routes from './router'\r\nimport { Login, SignIn, Home, Forget } from '../screen'\r\n\r\nclass RouterApp extends React.Component {\r\n  render () {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={Login} />\r\n          <Route path='/login' component={Login} />\r\n          <Route path='/forget' component={Forget} />\r\n          <Route path='/signin' component={SignIn} />\r\n          <Route path='/admin' component={Home} />\r\n          <Route path='/home' component={Home} />\r\n          <Route path='/notification' component={Home} />\r\n          <Route path='/passwordchange' component={Home} />\r\n          <Route path='/form' component={Home} />\r\n          <Route path='/mymovie' component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RouterApp\r\n","import { WebSocketLink } from 'apollo-link-ws'\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { HttpLink,InMemoryCache,ApolloClient,split,ApolloLink } from 'apollo-boost';\r\nconst config = 'http://3.141.17.227:3001/graphql'\r\nconst localStorageKeys = {\r\n    auth_token:'auth_token'\r\n}\r\nconst httpLink = new HttpLink({ uri: config })\r\n\r\nconst middlewareLink = new ApolloLink((operation, forward) => {\r\n  // get the authentication token from local storage if it exists\r\n  const tokenValue = localStorage.getItem(localStorageKeys.auth_token)\r\n  // return the headers to the context so httpLink can read them\r\n  operation.setContext({  \r\n    headers: { \r\n      Authorization: tokenValue ? `Bearer ${tokenValue}` : '',\r\n    },   \r\n  }) \r\n  return forward(operation) \r\n})\r\n\r\n// authenticated httplink\r\nconst httpLinkAuth = middlewareLink.concat(httpLink)\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri:'WSS://3.141.17.227:3001',\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: {\r\n      Authorization: `Bearer ${localStorage.getItem(localStorageKeys.auth_token)}`,\r\n    },\r\n  },\r\n})\r\n\r\nconst link = split(\r\n  // split based on operation type\r\n  ({ query }) => {\r\n    const { kind, operation } = getMainDefinition(query)\r\n    return kind === 'OperationDefinition' && operation === 'subscription'\r\n  },\r\n  wsLink,\r\n  httpLinkAuth,\r\n)\r\n\r\n// apollo client setup\r\nconst ApolloGQLClient = new ApolloClient({\r\n  link: ApolloLink.from([link]),\r\n  cache: new InMemoryCache(),\r\n  connectToDevTools: true,\r\n})\r\n\r\nexport default ApolloGQLClient;","import React from 'react';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloGQLClient from '../src/hooks/index';\r\n\r\n\r\nconst AppGQLClient = (props)=>{\r\n    return(\r\n        <ApolloProvider client={ApolloGQLClient} >\r\n            {props.children} \r\n        </ApolloProvider>\r\n    )\r\n}\r\n\r\nexport default AppGQLClient;","import React from \"react\";\r\n\r\nexport const AuthContext = React.createContext({\r\n    user: {},\r\n    setAuth: () => null,\r\n});","import Axios from \"axios\"\r\n// import { localStorageKeys, netWorkCallMethods } from \"../utils\";\r\nconst netWorkCallMethods = {\r\n    get:'GET',\r\n    post:'POST',\r\n    put:'PUT',\r\n    delete:'DELETE',\r\n    update:'UPDATE'\r\n}\r\nconst localStorageKeys = { \r\n    auth_token:'auth_token'\r\n}\r\nexport const networkCall = (url, method, body, headers,isAuthorized=false) => {\r\n\r\n    //Check for URL,method,body\r\n    if(!url && !method){\r\n        return Promise.reject({message:\"URL and HTTP Method is not mentioned.\"})\r\n    }\r\n\r\n    //Check for proper URL\r\n    if(url){\r\n        const expression = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\r\n        const regex = new RegExp(expression);\r\n\r\n        if(!url.match(regex)){\r\n            return Promise.reject({message:\"Malformed URL, Please check\"})\r\n        }\r\n    }\r\n\r\n    //Check for body of the POST method\r\n    if(method && method === netWorkCallMethods.post && !body){\r\n        return Promise.reject({message:\"POST method must contain Request Body.\"})\r\n    }\r\n\r\n    //Checking the Internet connection\r\n    if(!navigator.onLine){\r\n        return Promise.reject({message:\"Unable to connect with Internet!\"});\r\n    }\r\n\r\n    //Initializing the header\r\n    let newHeader = headers;\r\n\r\n    //Adding Authorization to headers if it is requested\r\n    if(isAuthorized){\r\n        newHeader = {\r\n            ...headers,\r\n            Authorization: localStorageKeys.auth_token\r\n        }\r\n    }\r\n\r\n    return Axios({\r\n        method: method,\r\n        url: url,\r\n        data: body,\r\n        headers: newHeader\r\n    });\r\n}","import React from \"react\";\r\nimport { AuthContext } from \"./components/context/index\";\r\n// import config from \"./config\";\r\nimport { networkCall } from \"./hooks/networkcall\";\r\n// import { netWorkCallMethods, localStorageKeys } from \"./utils\";\r\n\r\nconst config={}\r\n const netWorkCallMethods = {\r\n    get:'GET',\r\n    post:'POST',\r\n    put:'PUT',\r\n    delete:'DELETE',\r\n    update:'UPDATE'\r\n}\r\nconst localStorageKeys = {\r\n    auth_token:'auth_token'\r\n}\r\nclass AppAuth extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n      isRefreshed: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.refreshAPI();\r\n  }\r\n\r\n  refreshAPI() {\r\n    if (localStorage.getItem(localStorageKeys.auth_token)) {\r\n      networkCall(\r\n        `${config.api_url}/auth/refresh`, //Your refresh API End Point\r\n\r\n        netWorkCallMethods.get, //Mention your HTTP Method (GET,POST,PUT,UPDATE,DELETE) using the\r\n        //until variable networkCallMethod\r\n\r\n        null, //Request Body If any\r\n\r\n        null, //Addition Header If any\r\n\r\n        true //If true it adds Authorization key to the existing header with token from localstorage\r\n      )\r\n        .then((res) => {\r\n          let token = \"token\";\r\n\r\n          //TODO: Save your token to the token variable\r\n          token = res.data.auth_token;\r\n\r\n          //TODO: Save the token to the localstorage if you want the user\r\n          localStorage.setItem(localStorageKeys.auth_token, token);\r\n\r\n          this.setState({\r\n            // TODO: Save the user detail here\r\n            user: res.data.user,\r\n            isRefreshed: true,\r\n          });\r\n        })\r\n        .catch((res) => {\r\n          //Authorized token removing the current token from local storage.\r\n          localStorage.removeItem(localStorageKeys.auth_token);\r\n          this.setState({\r\n            isRefreshed: true,\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        isRefreshed: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isRefreshed ? (\r\n          <AuthContext.Provider\r\n            value={{ user: this.state.user, setAuth: this.setState }}\r\n          >\r\n            {this.props.children}\r\n          </AuthContext.Provider>\r\n        ) : (\r\n          <>Your Loader Here...</>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppAuth;\r\n","import * as React from 'react'\r\nimport RouterApp from '../router/index'\r\nimport AppGQLClient from '../App.gqlclient'\r\nimport AppAuth from '../App.auth'\r\n\r\nclass Root extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='warpper'>\r\n        <AppAuth>\r\n          <AppGQLClient>\r\n            <RouterApp />\r\n          </AppGQLClient>\r\n        </AppAuth>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Root\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"../node_modules/antd/dist/antd.css\";\r\nimport Root from \"./root/index\";\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"./index.css\";\r\n// root\r\nReactDOM.render(<Root />, document.getElementById(\"root\")); "],"sourceRoot":""}